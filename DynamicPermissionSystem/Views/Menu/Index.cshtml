@model IEnumerable<DynamicPermissionSystem.Models.Menu>
@using DynamicPermissionSystem.Models
@inject DynamicPermissionSystem.Models.ApplicationDbContext DbContext

@{
    ViewData["Title"] = "Menu List";
    var roleId = Context.Session.GetInt32("RoleId") ?? 0;

    // 🔹 Fetch permissions for "Menu" controller
    var menuPermission = DbContext.Menus
        .FirstOrDefault(m => m.Controller == "Menu" && m.Action == "Index");

    var perms = DbContext.RoleMenuPermissions
        .FirstOrDefault(rp => rp.RoleId == roleId && rp.MenuId == (menuPermission.Id));
}

<h3 class="mb-3">Menu List</h3>

@if (perms?.CanCreate == true)
{
    <a asp-action="Create" class="btn btn-primary mb-3">➕ Create New Menu</a>
}

<table class="table table-bordered table-striped">
    <thead class="table-light">
        <tr>
            <th>Name</th>
            <th>Controller</th>
            <th>Action</th>
            <th>Parent Id</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var m in Model)
        {
            <tr>
                <td>@m.Name</td>
                <td>@m.Controller</td>
                <td>@m.Action</td>
                <td>@m.ParentId</td>
                <td>
                    @if (perms?.CanEdit == true)
                    {
                        <a asp-action="Edit" asp-route-id="@m.Id" class="btn btn-sm btn-warning">Edit</a>
                    }
                    <a asp-action="Details" asp-route-id="@m.Id" class="btn btn-sm btn-info text-white">Details</a>
                    @if (perms?.CanDelete == true)
                    {
                        <a asp-action="Delete" asp-route-id="@m.Id" class="btn btn-sm btn-danger">Delete</a>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>
